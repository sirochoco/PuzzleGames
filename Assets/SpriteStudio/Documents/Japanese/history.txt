=============================================================================
 SpriteStudioPlayer for Unity

  更新履歴

 Copyright(C) 2003-2012 Web Technology Corp. All rights reserved.
=============================================================================

[Ver.1.15] (2012/12/12)

  Unity 4 に対応しました。

[Ver.1.14] (2012/08/08)

  [不具合修正]
  
  ・SsPart.IndividualizeMaterial() で生成したマテリアルをRevertChangedMaterial
    呼び出し時と、SsSprite 破棄時に削除するようにしました。
  
  [機能追加]
  
  ・SsSprite にパーツ配列取得メソッド GetParts を追加しました。

[Ver.1.13] (2012/06/27)

  [動作仕様の変更]

  ・スケールの親子継承設定がOFFに設定されたアニメーションの再生に対応。
    ※X座標、Y座標、角度に関してはOFFにしてもUnity上では常に継承されますのでご
      注意下さい。

  [不具合修正]

  ・EndFrame プロパティを経由して値を設定した場合、現在のEndFrame値を上回る値を
    指定できない不具合を修正
  
  ・上下反転フラグで親のフラグを継承する設定になっているときに親の左右反転フラグ
    を参照していた間違いを修正
  
  ・ssax 出力時のオプションで"未使用のアトリビュートは出力しない"をONで出力した
    場合に、継承設定が"個別の設定を使用する"になっており、且つチェックが付いて
    いないアトリビュートの継承設定が常にデフォルト値(反転・非表示フラグのみOFF)
    になっていた間違いを修正。

[Ver.1.12] (2012/05/17)

  [不具合修正]

  ・原点オフセットアニメーションが動作していなかった問題を修正

[Ver.1.11] (2012/05/16)

  [不具合修正]

  ・ユーザーデータ・サウンドデータのキーが１つしか無いパーツに対して、コールバ
    ック(OnUserDataKey, OnSoundKey)を設定すると再生時にエラー停止する不具合の修
    正。

  ・親パーツのスケールにマイナス値が入っている場合、子パーツの角度の回転方向が
    逆にならないように修正。

[Ver.1.10] (2012/05/01)

  [ご注意]
  
  ・今回のバージョンにアップデートする前に必ず現在のプロジェクトをバックアップ
    して頂くようお願いいたします。
  
  ・反転フラグ不具合の修正を適用するにはアニメーションデータを再インポートする
    必要があります。

  [動作仕様の変更]

  ★初期化処理をStart()からAwake()に移動しました。

    Awake() 後は一旦ポーズをかけて、Start() または、アニメーションの変更時に、
    PlayAtStart プロパティが true の時に限って自動でアニメーションを再生開始し
    ます。
    
    ユーザー側スクリプトのStart()でスプライトオブジェクトの座標の設定などを行な
    っており、且つ他スクリプトのUpdate()でスプライトオブジェクトの座標の取得を
    行なっている様なケースでは以前と違う動作になる可能性があります。
    その場合はStart()での座標設定処理をAwake() に移動する等の必要があるかもしれ
    ません。恐れ入りますがこの点にご注意ください。

  ・シェーダの自動生成をデフォルトで無効にしました。

    これまでは SsShaderTemplate.txt という名前のファイルをインポートすると自動
    的に半透明ブレンド方式とカラーブレンド方式の全組み合わせのシェーダを生成し
    ていましたが、この動作を無効にしました。
    
    有効にする場合は、SsAssetPostProcessor.cs の上部にある定義
    #define _GENERATE_SHADERS
    を有効にしてください。
    
    ※シェーダについて詳しくは script.txt の"■シェーダについて"を参照してくだ
      さい。

  [機能追加]

  ・当たり判定パーツに対応
    
    SpriteStudio 上で設定した当たり判定パーツを利用して任意のパーツ同士、また
    はスプライトオブジェクト同士での接触判定を行うことができます。
    詳しくは script.txt の SsPart.Intersects(), IntersectsByAABB()、
    SsSprite.IntersectByBoundingParts() を参照してください。
    当たり判定の領域を Unity 上で確認するには、Draw Bounding Parts にチェック
    を付けます。詳しくは usage.txt の Draw Bounding Parts を参照してください。
    
    script.txt の"■当たり判定について"も参照して下さい。
  
  ・動的なマテリアル生成機能の追加

    詳しくは script.txt の IndividualizeMaterial(), ChangeMaterial(), 
    RevertChangedMaterial() を参照してください。
    
    SsGameTest.cs の BeeObject.Reset() で実際に利用しています。
    ハチが追跡モードになった場合にマテリアルカラーで赤く色を付けて、通常モード
    に戻るとマテリアルを元に戻しています。
    
    従来のシェーダはマテリアルカラーをブレンドしませんでしたが、今回の機能追加
    でブレンドするシェーダが追加されました。
    インポート時にこのシェーダを利用するマテリアルが作られることはありません。
    IndividualizeMaterial() に true を指定してマテリアルをインスタンス化した
    場合に利用されます。

  ・メッシュを再構築せずにアニメーションを切り替える機能を追加
  
    パーツ構造が同一のアニメーション間での切り替えを高速に行うことができます。
    詳しくは script.txt の ReplaceAnime() を参照してください。

  ・アニメーション終了時に自動削除するフラグの追加

    DestroyAtEnd プロパティに true を指定されたスプライトオブジェクトはアニメ
    ーション終了時に自動削除されます。

  ・再生方向の変更時に現在フレームを維持する機能を追加

    詳しくは script.txt の SetPlayDirection() を参照して下さい。

  ・一定時間が経つと自動的に削除する機能を追加
    
    LifeTime プロパティに削除までの時間を秒単位で指定します。
    詳しくは script.txt の SsSprite.LifeTime を参照して下さい。

  ・IsPlaying(), IsAnimationFinished(), IsLastFrame() メソッドの追加。
    
    詳しくは script.txt を参照して下さい。
  
  [不具合修正]

  ・カラー指定無しのカラーブレンドキーで囲まれた区間ではパーツのα値が０になり
    表示されなくなる不具合を修正。

  ・インポート時に各アトリビュート毎に親からの継承を行うかどうかの設定を取得し
    ますが、SpriteStudio 上で特に指定をしていなかった場合に異なった値で解釈し
    ていた問題を修正。

    具体的には、"アニメーション設定"→"その他"にある"「左右反転フラグ」～(中略
    )イメージのみ表示を反転する"にチェックがない場合は全て"継承しない"となり、
    チェックがある場合は、左右・上下反転フラグ、非表示フラグのみ"継承しない"で
    その他は"継承する"設定になっていましたが、これを指定がないアトリビュートに
    ついては"継承しない"設定になるよう修正しました。

  ・SpriteStudio 上で反転フラグの継承設定がｘになっていても親の状態を継承して
    いた間違いを修正。

  ・非表示フラグのキーが１つもない場合は常に非表示扱いになるように修正。
    また最初のキーに到達する前は常に非表示になるよう修正。

  ・CreateTransform で生成した Transform の position が数フレームの間、更新さ
    れない問題を修正。

    この修正に関連して以下の注意点があります。
    例として人型の多関節アニメの手パーツに剣を持たせる、とします。
    
        SsSprite	targetSprite;	// 人型アニメのスプライト
        SsSprite	swordSprite;	// 剣アニメのスプライト

        ...(ゲームオブジェクトの生成～アニメの取得・設定は省略)...
        
        // 手のパーツを取得します。
        SsPart handPart = targetSprite.GetPart("HandPart");
        // 手の Transform を生成・取得します。
        Transform	handTransform = handPart.CreateTransform();
        
    このあと、これまでは以下のようにする必要がありました。

        // 剣の位置を初期化
        swordTransform.localPosition = Vector3.zero;
        swordTransform.localRotation = Quaternion.identity;
        swordTransform.localScale = Vector3.one;
        // 剣の親を手にする
        swordTransform.parent = handTransform;
        // アタッチ先の全Transformを更新
        targetSprite.UpdateAlways();
        
    上記を以下のように修正します。

        // 剣の親を手にする
        swordTransform.parent = handTransform;
        // 剣の位置を初期化
        swordTransform.localPosition = Vector3.zero;
        swordTransform.localRotation = Quaternion.identity;
        swordTransform.localScale = Vector3.one;

    とします。
    今回の修正で CreateTransform() 内で生成された Transform の情報は現在の
    位置・回転・スケールで即時に更新される様になりました。
  
  [その他の変更箇所]
  
  script.txt
    ■当たり判定について の項目を追加
    ■シェーダについて の項目を追加

  readme.txt
    ■ご注意 に下記を追加
      ●同名のパーツが複数ある場合の注意点
      ●反転フラグの動作の違いについて

  usage.txt
    ●__SsShaderKeeper_DoNotDeleteMe について
      __SsShaderKeeper_DoNotDeleteMe の用途を追記。
  

[Ver.1.05] (2012/04/04)

  [不具合修正]

  ・null パーツに設定された拡縮・回転アニメーションが子パーツに適用されない不
    具合を修正
  
  ・複数のssaxを一括で再インポートした後に実行やシーンの保存を行うと強制終了
    することがある問題を修正

  ・初めてssaxをインポートした際に参照される画像ファイルのフィルターモードを
    PointからUnityのデフォルト(Bilinear)に変更。

[Ver.1.04] (2012/03/27)

  [不具合修正]

  ・アニメーション設定のイメージのみ反転フラグをOFFにして出力したアニメーション
    が  インポート時に常にONとみなされてしまう不具合を修正。

  ・iOS/Android ビルドにおいて、Dynamic Batching が ON の状態で OpenGL ES 2.0
    が有効になる設定でパブリッシュした場合、実機上で描画が非常に遅くなる問題を
    修正。

[Ver.1.03] (2012/03/01)

  [サンプル]
  サンプルにエフェクトデータを追加しました。(effectsフォルダ)
  GameScene でマウスの中ボタンをクリックすると発動します。

[Ver.1.02] (2012/02/24)

  Unity 3.5f5 に合わせて一部を修正しました。

  ※Unity 3.4 では動作しませんのでご注意下さい。

  ※Flash Player(Preview) のビルドにはまだ対応していません。

  [機能追加、改良]

  ・不透明度ブレンド方法の"減算"に対応。

  [不具合修正]

  ・0フレームにキーが存在しないパーツが全く表示されない不具合を修正。

  ・カラーブレンドのキーが複数並んでいる時に、カラーの指定種別と演算式が正しく
    反映されない不具合を修正。
  
  ・乗算のαブレンドがミックスと同じ結果になっていた不具合を修正。

  [その他]

  ・旧い(obsolete)関数の呼び出し箇所を修正。

[Ver.1.01] (2012/02/01)

  [機能追加、改良]
  ・データベースファイルに関する機能を追加しました。
    詳しくは usage.txt の
    ■データベースファイルとアニメーションデータのプレハブについて
    を御覧ください。

  ・インポート時にアニメーションデータ毎のスケーリング
  
  [不具合修正]
  ・ゲーム開始時に"not found shader!!"というエラーメッセージが出力される
    問題を修正。(実害はありませんでした)

  ・インポート時に内部でエラーが発生すると再起動するまでインポートができ
    なくなる不具合を修正。
  
  [その他]
  ・スプライトオブジェクト追加時にシーンに__SsShaderKeeper_DoNotDeleteMe
    を自動追加する機能を削除しました。
    
    アニメーションで必要になるシェーダはインポート時にマテリアルと１：１
    で生成される仕様に変更したため、使用アニメーションがパブリッシュされ
    れば不要となったからです。

  ・サンプルデータのOriginal Pathが旧かったのを修正。

  
[Ver.0.99] (2012/01/26)
  
  以下は Ver.0.73 版からの更新内容です。

  [機能追加、改良]
  ・ドローコール削減対応

    不透明度としてマテリアルカラーのα値を利用するのをやめて、頂点カラー
    のα値を利用するように変更しました。

    結果として、不透明・半透明のパーツが混在したアニメーションの再生時に
    マテリアルの切り替えが発生することがなくなったためドローコールが減っ
    ています。

    【ご注意】
    カラーブレンドアニメが適用されている半透明パーツは OpenGL ES 1.x 環
    境（初期型のiPhone/Android端末）では不透明度が無視されます。

    これはカラーブレンドの強度パラメータとパーツが持つ不透明度を同時に扱
    うために CgProgram を利用しており、OpenGL ES 1.x 環境ではこれに対応
    していないことが原因です。

  ・アニメーションデータのインスペクタの項目追加

    SsAnimation アセット(*_ssa)のインスペクタ上部に Reimport ボタンを追
    加しました。
    前回インポート時の元 .ssax ファイルを記憶して同ファイルを再インポー
    トします。

  ・スプライトオブジェクトの変更点

    インスペクタに参照アニメへのジャンプボタンを追加しました。

    Animation  アニメ名  の右側の [Edit..] ボタンになります。

  ・設定メニューの追加

    SpriteStudio メニューに Settings サブメニューを追加しました。
    Close ボタンを押すと変更が適用されます。

    現在、下記の設定のみ指定が可能です。

    ・Scale Factor	インポート時のパーツサイズにかける拡大率です。

  [アニメインポート時の挙動の変更]

  ・再インポートすると参照しているスプライトオブジェクトを自動更新するよ
    うにしました。

  ・使用しているカラーブレンドとアルファブレンドの組み合わせに応じたマテ
    リアルを作成し、スプライトオブジェクトの初期化時にマテリアルの複製を
    行わず極力マテリアルを共有できるように修正しました。

  ・自動生成されるマテリアルファイルについて

    アニメーションデータのインポート時に各パーツが参照しているテクスチャ
    を参照するマテリアルを自動的に生成します。
    この時、各パーツが持つカラーブレンドアニメの演算式と不透明度の演算式
    の種類に応じて適切なシェーダが割り当てられたマテリアルを必要な数だけ
    生成します。
  
    ファイル名は下記の様になります。
  
    テクスチャファイル名_Mat_???Color???Alpha


=============================================================================
株式会社ウェブテクノロジ
http://www.webtech.co.jp/
Copyright(C) 2003-2012 Web Technology Corp.
=============================================================================

* SpriteStudio, Web Technologyは、株式会社ウェブテクノロジの登録商標です。
* その他の商品名は各社の登録商標または商標です。

[End of TEXT]
